import React, { useState } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import './Home.css';

const API_BASE_URL = process.env.REACT_APP_API_URL || 'https://sorrim-project-backend.onrender.com';

const Home = () => {
  const navigate = useNavigate();
  const [isGuestAnimating, setIsGuestAnimating] = useState(false);
  const [guestError, setGuestError] = useState('');

  const handleGuestClick = async () => {
    setIsGuestAnimating(true);
    setGuestError('');
    
    try {
      const response = await fetch(`${API_BASE_URL}/api/projects/latest`);
      
      if (response.ok) {
        const latestProject = await response.json();
        setTimeout(() => {
          navigate(`/guest/${latestProject.id}`);
        }, 1500);
      } else {
        const errorData = await response.json();
        setGuestError(errorData.error || '‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ');
        setIsGuestAnimating(false);
      }
    } catch (error) {
      console.error('Error fetching latest project:', error);
      setGuestError('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå');
      setIsGuestAnimating(false);
    }
  };

  return (
    <div className="home-container">
      <div className="hero-section">
        <h1>Event Media Collector</h1>
        <p>‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏Ñ‡∏•‡∏¥‡∏õ‡πÅ‡∏•‡∏∞‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å‡πÅ‡∏Ç‡∏Å‡πÉ‡∏ô‡∏á‡∏≤‡∏ô‡∏≠‡∏µ‡πÄ‡∏ß‡∏ô‡∏ï‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</p>
        
        <div className="user-type-selection">
          <div className="user-type-card">
            <h3>üì∏ Photographer</h3>
            <p>‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏õ‡∏à‡∏≤‡∏Å‡πÅ‡∏Ç‡∏Å</p>
            <Link to="/login" className="btn btn-primary">
              ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö Photographer
            </Link>
          </div>
          
          <div className={`user-type-card ${isGuestAnimating ? 'guest-scanning' : ''}`}>
            <h3>üé≠ Guest</h3>
            <p>‡∏™‡πÅ‡∏Å‡∏ô QR Code ‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏•‡∏¥‡∏õ/‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û</p>
            <div className="guest-options">
              <button 
                className="btn btn-secondary guest-demo-btn"
                onClick={handleGuestClick}
                disabled={isGuestAnimating}
              >
                {isGuestAnimating ? (
                  <span className="scanning-text">
                    üì± ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î...
                  </span>
                ) : (
                  '‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏á‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î'
                )}
              </button>
              
              {guestError && (
                <div className="guest-error">
                  ‚ö†Ô∏è {guestError}
                  <small>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏´‡πâ Photographer ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå‡∏Å‡πà‡∏≠‡∏ô</small>
                </div>
              )}
              
              <div className="qr-info">
                <p>‡∏´‡∏£‡∏∑‡∏≠‡∏™‡πÅ‡∏Å‡∏ô QR Code ‡∏à‡∏≤‡∏Å‡∏á‡∏≤‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î</p>
                {isGuestAnimating && (
                  <div className="qr-scanning-animation">
                    <div className="scan-line"></div>
                    <div className="scan-corners">
                      <div className="corner top-left"></div>
                      <div className="corner top-right"></div>
                      <div className="corner bottom-left"></div>
                      <div className="corner bottom-right"></div>
                    </div>
                  </div>
                )}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Home;
